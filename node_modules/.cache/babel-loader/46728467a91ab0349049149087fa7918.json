{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Downloads\\\\working\\\\material-kit-react-main\\\\src\\\\views\\\\settings\\\\SettingsView\\\\Password.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, TextField, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {}\n});\n\nconst Password = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: clsx(classes.root, className),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        subheader: \"Update password\",\n        title: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Password\",\n          margin: \"normal\",\n          name: \"password\",\n          onChange: handleChange,\n          type: \"password\",\n          value: values.password,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Confirm password\",\n          margin: \"normal\",\n          name: \"confirm\",\n          onChange: handleChange,\n          type: \"password\",\n          value: values.confirm,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        p: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Password, \"m/KvybCMXjOtb5ZjG4iBIRYwbsQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Password;\nPassword.propTypes = {\n  className: PropTypes.string\n};\nexport default Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["C:/Users/Dev/Downloads/working/material-kit-react-main/src/views/settings/SettingsView/Password.js"],"names":["React","useState","PropTypes","clsx","Box","Button","Card","CardContent","CardHeader","Divider","TextField","makeStyles","useStyles","root","Password","className","rest","classes","values","setValues","password","confirm","handleChange","event","target","name","value","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,SAPF,EAQEC,UARF,QASO,mBATP;;AAWA,MAAMC,SAAS,GAAGD,UAAU,CAAE;AAC5BE,EAAAA,IAAI,EAAE;AADsB,CAAF,CAA5B;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAA4B;AAAA;;AAC3C,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC;AACnCmB,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,OAAO,EAAE;AAF0B,GAAD,CAApC;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACK,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF1B,KAAD,CAAT;AAID,GALD;;AAOA,sBACE;AACE,IAAA,SAAS,EAAEvB,IAAI,CAACc,OAAO,CAACJ,IAAT,EAAeE,SAAf,CADjB;AAAA,OAEMC,IAFN;AAAA,2BAIE,QAAC,IAAD;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,WAAD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,MAAM,EAAC,QAHT;AAIE,UAAA,IAAI,EAAC,UAJP;AAKE,UAAA,QAAQ,EAAEM,YALZ;AAME,UAAA,IAAI,EAAC,UANP;AAOE,UAAA,KAAK,EAAEJ,MAAM,CAACE,QAPhB;AAQE,UAAA,OAAO,EAAC;AARV;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,KAAK,EAAC,kBAFR;AAGE,UAAA,MAAM,EAAC,QAHT;AAIE,UAAA,IAAI,EAAC,SAJP;AAKE,UAAA,QAAQ,EAAEE,YALZ;AAME,UAAA,IAAI,EAAC,UANP;AAOE,UAAA,KAAK,EAAEJ,MAAM,CAACG,OAPhB;AAQE,UAAA,OAAO,EAAC;AARV;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eA4BE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cA5BF,eA6BE,QAAC,GAAD;AACE,QAAA,OAAO,EAAC,MADV;AAEE,QAAA,cAAc,EAAC,UAFjB;AAGE,QAAA,CAAC,EAAE,CAHL;AAAA,+BAKE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,OAAO,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD,CA/DD;;GAAMP,Q;UACYF,S;;;KADZE,Q;AAiENA,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,SAAS,EAAEb,SAAS,CAAC0B;AADF,CAArB;AAIA,eAAed,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n"]},"metadata":{},"sourceType":"module"}