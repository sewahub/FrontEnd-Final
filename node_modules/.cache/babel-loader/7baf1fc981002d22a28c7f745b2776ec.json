{"ast":null,"code":"import { ACTION_TYPES } from '../actions/organization/module';\nconst formFields = {\n  moduleName: ''\n};\nconst initialState = {\n  list: [],\n  form: formFields\n};\n\nconst modules = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALL:\n      return { ...state,\n        list: [...action.payload]\n      };\n\n    case ACTION_TYPES.CREATE:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case ACTION_TYPES.UPDATE:\n      return { ...state,\n        list: state.list.map(x => {\n          return x.ids === action.payload.id ? action.payload : x;\n        })\n      };\n\n    case ACTION_TYPES.DELETE:\n      return { ...state,\n        list: state.list.filter(x => x.ids !== action.payload)\n      };\n\n    case ACTION_TYPES.ON_CHANGE:\n      return { ...state,\n        form: {\n          moduleName: action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default modules;","map":{"version":3,"sources":["C:/Users/Dev/Downloads/working/material-kit-react-main/src/redux/reducers/modules.js"],"names":["ACTION_TYPES","formFields","moduleName","initialState","list","form","modules","state","action","type","FETCH_ALL","payload","CREATE","UPDATE","map","x","ids","id","DELETE","filter","ON_CHANGE"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gCAA7B;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,UAAU,EAAE;AADK,CAAnB;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,IAAI,EAAEJ;AAFa,CAArB;;AAKA,MAAMK,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,YAAY,CAACU,SAAlB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,IAAI,EAAE,CAAC,GAAGI,MAAM,CAACG,OAAX;AAFD,OAAP;;AAKF,SAAKX,YAAY,CAACY,MAAlB;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAgBI,MAAM,CAACG,OAAvB;AAFD,OAAP;;AAKF,SAAKX,YAAY,CAACa,MAAlB;AACE,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWU,GAAX,CAAgBC,CAAD,IAAO;AAC1B,iBAAOA,CAAC,CAACC,GAAF,KAAUR,MAAM,CAACG,OAAP,CAAeM,EAAzB,GAA8BT,MAAM,CAACG,OAArC,GAA+CI,CAAtD;AACD,SAFK;AAFD,OAAP;;AAOF,SAAKf,YAAY,CAACkB,MAAlB;AACE,aAAO,EACL,GAAGX,KADE;AAELH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWe,MAAX,CAAmBJ,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUR,MAAM,CAACG,OAA1C;AAFD,OAAP;;AAKF,SAAKX,YAAY,CAACoB,SAAlB;AACE,aAAO,EACL,GAAGb,KADE;AAELF,QAAAA,IAAI,EAAE;AAAEH,UAAAA,UAAU,EAAEM,MAAM,CAACG;AAArB;AAFD,OAAP;;AAKF;AACE,aAAOJ,KAAP;AAlCJ;AAoCD,CArCD;;AAuCA,eAAeD,OAAf","sourcesContent":["import { ACTION_TYPES } from '../actions/organization/module';\r\n\r\nconst formFields = {\r\n  moduleName: ''\r\n};\r\n\r\nconst initialState = {\r\n  list: [],\r\n  form: formFields\r\n};\r\n\r\nconst modules = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload]\r\n      };\r\n\r\n    case ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload]\r\n      };\r\n\r\n    case ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((x) => {\r\n          return x.ids === action.payload.id ? action.payload : x;\r\n        })\r\n      };\r\n\r\n    case ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.ids !== action.payload)\r\n      };\r\n\r\n    case ACTION_TYPES.ON_CHANGE:\r\n      return {\r\n        ...state,\r\n        form: { moduleName: action.payload }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modules;\r\n"]},"metadata":{},"sourceType":"module"}