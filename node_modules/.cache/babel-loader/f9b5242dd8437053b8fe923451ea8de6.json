{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SumeshPokhrel\\\\Downloads\\\\FrontEnd-Final-master\\\\src\\\\views\\\\org\\\\ModuleListView\\\\Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { green, grey } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport { Box, Card, Checkbox, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography, makeStyles, Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  importButton: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500]\n  },\n  exportButton: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    color: theme.palette.getContrastText(grey[500]),\n    backgroundColor: grey[500]\n  }\n}));\n\nconst Results = ({\n  className,\n  modules,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedModuleIds, setSelectedModuleIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = event => {\n    let newSelectedModuleIds;\n\n    if (event.target.checked) {\n      newSelectedModuleIds = modules.map(module => module.ids);\n    } else {\n      newSelectedModuleIds = [];\n    }\n\n    setSelectedModuleIds(newSelectedModuleIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedModuleIds.indexOf(id);\n    let newSelectedModuleIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedModuleIds = newSelectedModuleIds.concat(selectedModuleIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedModuleIds = newSelectedModuleIds.concat(selectedModuleIds.slice(1));\n    } else if (selectedIndex === selectedModuleIds.length - 1) {\n      newSelectedModuleIds = newSelectedModuleIds.concat(selectedModuleIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedModuleIds = newSelectedModuleIds.concat(selectedModuleIds.slice(0, selectedIndex), selectedModuleIds.slice(selectedIndex + 1));\n    }\n\n    setSelectedModuleIds(newSelectedModuleIds);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: clsx(classes.root, className),\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        minWidth: 650,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.importButton,\n            children: \"Import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.exportButton,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: selectedModuleIds.length === modules.length,\n                    color: \"primary\",\n                    indeterminate: selectedModuleIds.length > 0 && selectedModuleIds.length < modules.length,\n                    onChange: handleSelectAll\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: modules.slice(0, limit).map(module => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                selected: selectedModuleIds.indexOf(module.ids) !== -1,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: selectedModuleIds.indexOf(module.ids) !== -1,\n                    onChange: event => handleSelectOne(event, module.ids),\n                    value: \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    alignItems: \"center\",\n                    display: \"flex\",\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"textPrimary\",\n                      variant: \"body1\",\n                      children: module.moduleName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this)]\n              }, module.ids, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: modules.length,\n      onChangePage: handlePageChange,\n      onChangeRowsPerPage: handleLimitChange,\n      page: page,\n      rowsPerPage: limit,\n      rowsPerPageOptions: [5, 10, 25]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Results, \"1vXhdMKyg9UsBcmSM+Zwpq93b2I=\", false, function () {\n  return [useStyles];\n});\n\n_c = Results;\nResults.propTypes = {\n  className: PropTypes.string,\n  modules: PropTypes.array.isRequired,\n  selectItem: PropTypes.func,\n  currentId: PropTypes.array,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  selectedItems: PropTypes.array,\n  selectAllItems: PropTypes.func\n};\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["C:/Users/SumeshPokhrel/Downloads/FrontEnd-Final-master/src/views/org/ModuleListView/Results.js"],"names":["React","useState","clsx","green","grey","PropTypes","PerfectScrollbar","TableContainer","Paper","Box","Card","Checkbox","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","makeStyles","Button","useStyles","theme","root","avatar","marginRight","spacing","importButton","marginTop","marginLeft","color","palette","getContrastText","backgroundColor","exportButton","Results","className","modules","rest","classes","selectedModuleIds","setSelectedModuleIds","limit","setLimit","page","setPage","handleSelectAll","event","newSelectedModuleIds","target","checked","map","module","ids","handleSelectOne","id","selectedIndex","indexOf","concat","slice","length","handleLimitChange","value","handlePageChange","newPage","moduleName","propTypes","string","array","isRequired","selectItem","func","currentId","onEdit","onDelete","selectedItems","selectAllItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { green, grey } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  importButton: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n  },\n  exportButton: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    color: theme.palette.getContrastText(grey[500]),\n    backgroundColor: grey[500],\n  }\n}));\n\nconst Results = ({ className, modules, ...rest }) => {\n  const classes = useStyles();\n  const [selectedModuleIds, setSelectedModuleIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedModuleIds;\n\n    if (event.target.checked) {\n      newSelectedModuleIds = modules.map((module) => module.ids);\n    } else {\n      newSelectedModuleIds = [];\n    }\n\n    setSelectedModuleIds(newSelectedModuleIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedModuleIds.indexOf(id);\n    let newSelectedModuleIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedModuleIds = newSelectedModuleIds.concat(selectedModuleIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedModuleIds = newSelectedModuleIds.concat(selectedModuleIds.slice(1));\n    } else if (selectedIndex === selectedModuleIds.length - 1) {\n      newSelectedModuleIds = newSelectedModuleIds.concat(selectedModuleIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedModuleIds = newSelectedModuleIds.concat(\n        selectedModuleIds.slice(0, selectedIndex),\n        selectedModuleIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedModuleIds(newSelectedModuleIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={650}>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n          >\n            <Button className={classes.importButton}>\n              Import\n            </Button>\n            <Button className={classes.exportButton}>\n              Export\n            </Button>\n          </Box>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedModuleIds.length === modules.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedModuleIds.length > 0\n                        && selectedModuleIds.length < modules.length\n                      }\n                      onChange={handleSelectAll}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    Name\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {modules.slice(0, limit).map((module) => (\n                  <TableRow\n                    hover\n                    key={module.ids}\n                    selected={selectedModuleIds.indexOf(module.ids) !== -1}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedModuleIds.indexOf(module.ids) !== -1}\n                        onChange={(event) => handleSelectOne(event, module.ids)}\n                        value=\"true\"\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        alignItems=\"center\"\n                        display=\"flex\"\n                      >\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"body1\"\n                        >\n                          {module.moduleName}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={modules.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  modules: PropTypes.array.isRequired,\n  selectItem: PropTypes.func,\n  currentId: PropTypes.array,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  selectedItems: PropTypes.array,\n  selectAllItems: PropTypes.func\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}