{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SumeshPokhrel\\\\Downloads\\\\FrontEnd-Final-master\\\\src\\\\views\\\\auth\\\\RegisterView.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Checkbox, Container, FormHelperText, Link, TextField, Typography, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = () => {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: classes.root,\n    title: \"Register\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100%\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: '',\n            firstName: '',\n            lastName: '',\n            password: '',\n            policy: false\n          },\n          validationSchema: Yup.object().shape({\n            email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            firstName: Yup.string().max(255).required('First name is required'),\n            lastName: Yup.string().max(255).required('Last name is required'),\n            password: Yup.string().max(255).required('password is required'),\n            policy: Yup.boolean().oneOf([true], 'This field must be checked')\n          }),\n          onSubmit: () => {\n            navigate('/app/dashboard', {\n              replace: true\n            });\n          },\n          children: ({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mb: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"h2\",\n                children: \"Create new account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                variant: \"body2\",\n                children: \"Use your email to create new account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.firstName && errors.firstName),\n              fullWidth: true,\n              helperText: touched.firstName && errors.firstName,\n              label: \"First name\",\n              margin: \"normal\",\n              name: \"firstName\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.firstName,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.lastName && errors.lastName),\n              fullWidth: true,\n              helperText: touched.lastName && errors.lastName,\n              label: \"Last name\",\n              margin: \"normal\",\n              name: \"lastName\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.lastName,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.email && errors.email),\n              fullWidth: true,\n              helperText: touched.email && errors.email,\n              label: \"Email Address\",\n              margin: \"normal\",\n              name: \"email\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"email\",\n              value: values.email,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.password && errors.password),\n              fullWidth: true,\n              helperText: touched.password && errors.password,\n              label: \"Password\",\n              margin: \"normal\",\n              name: \"password\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"password\",\n              value: values.password,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              alignItems: \"center\",\n              display: \"flex\",\n              ml: -1,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: values.policy,\n                name: \"policy\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body1\",\n                children: [\"I have read the\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                  color: \"primary\",\n                  component: RouterLink,\n                  to: \"#\",\n                  underline: \"always\",\n                  variant: \"h6\",\n                  children: \"Terms and Conditions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), Boolean(touched.policy && errors.policy) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: errors.policy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              my: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                disabled: isSubmitting,\n                fullWidth: true,\n                size: \"large\",\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Sign up now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body1\",\n              children: [\"Have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                component: RouterLink,\n                to: \"/login\",\n                variant: \"h6\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterView, \"pvfM4ZXsoMI5DaOvCNwyBjRqjLg=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = RegisterView;\nexport default RegisterView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterView\");","map":{"version":3,"sources":["C:/Users/SumeshPokhrel/Downloads/FrontEnd-Final-master/src/views/auth/RegisterView.js"],"names":["React","Link","RouterLink","useNavigate","Yup","Formik","Box","Button","Checkbox","Container","FormHelperText","TextField","Typography","makeStyles","Page","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","RegisterView","classes","navigate","email","firstName","lastName","password","policy","object","shape","string","max","required","boolean","oneOf","replace","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","values","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              policy: false\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={() => {\n              navigate('/app/dashboard', { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n"]},"metadata":{},"sourceType":"module"}